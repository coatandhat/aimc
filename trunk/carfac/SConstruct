#  CARFAC Open Source C++ Library
#
# This C++ file is part of an implementation of Lyon's cochlear model:
# "Cascade of Asymmetric Resonators with Fast-Acting Compression"
# to supplement Lyon's upcoming book "Human and Machine Hearing"
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

## @author Ron Weiss <ronw@google.com>
#  @date created 2013/05/21
#  @version \$Id$

"""@package SConstruct
SConstruct file for the CARFAC Open Source C++ Library.

To install dependencies on Ubuntu, run:

  sudo apt-get install libeigen3-dev scons \
    cmake libgtest-dev libsndfile-dev  # For testing.
  export EIGEN_PATH=/usr/include/eigen3
  export GTEST_SOURCE=/usr/src/gtest

To build all libraries, run:
 scons

To run unit tests, run:
  scons test

To clean up binaries, run:
  scons --clean
"""

import os

carfac_sources = [
    'agc_coeffs.cc',
    'agc_params.cc',
    'car_coeffs.cc',
    'carfac.cc',
    'carfac_common.cc',
    'carfac_output.cc',
    'car_params.cc',
    'ear.cc',
    'ear_output.cc',
    'ihc_coeffs.cc',
    'ihc_params.cc',
    ]

env = Environment(CPPPATH=[os.environ['EIGEN_PATH']])
# Needed to support std::vector initialization lists.
env.MergeFlags(['-std=c++0x'])
env.Library(target = 'carfac', source = carfac_sources)

env.Command('tmp/libgtest.a', [],
            [
                Delete('tmp'),
                Copy('tmp', os.environ['GTEST_SOURCE']),
                'cd tmp && cmake . && make',
            ])

test_program = env.Program(target = 'carfac_test',
                           source = ['carfac_test.cc'],
                           LIBS = ['carfac', 'gtest', 'gtest_main', 'pthread'],
                           LIBPATH = ['.', 'tmp'])
test_alias = Alias('test', [test_program], test_program[0].abspath)
AlwaysBuild(test_alias)
